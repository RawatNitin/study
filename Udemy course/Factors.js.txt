function printDivisors(n) {
    const factors = [];
	if(!n){
        return factors;
    } 
   
    for(let i = 2; i <= Math.sqrt(n); i++){
        if(n % i === 0){
            factors.push(i);
            if(i !== n/i){
                factors.push(n/i);
            }
        }
    }
    return factors;
}
            

printDivisors(100);

If a number n is not a prime, it can be factored into two factors a and b:

n = a * b
If both a and b were greater than the square root of n, then a * b would be greater than n. 
So at least one of those factors must be less than or equal to the square root of n, and if we can't find any 
factors less than or equal to the square root, 
n must be prime.